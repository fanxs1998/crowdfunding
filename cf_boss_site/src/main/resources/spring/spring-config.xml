<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<context:component-scan base-package="com.fanxs.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 加载外部属性配置文件 -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:config/jdbc.properties" />
	</bean>

	<!-- 配置C3P0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
	    <property name="dataSource" ref="dataSource"></property>
	    <property name="mapperLocations">
	        <list>
	            <value>classpath*:mybatis/mapper.*/*Mapper.xml</value>
	        </list>
	    </property>
	</bean>
	<!-- 配置mybatis mapper批量扫描 --> <!-- 从basePackage指定的mapper包中扫描mapper类，自动生成bean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  <!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName"
				  value="sqlSessionFactory" />
		<property name="basePackage" value="com.fanxs.*.dao" />
	</bean>
	<!-- 事务配置（spring接管mybatis事务操作，如事务的提交、回滚、关闭等） -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>  <!-- 使用annotation注解方式配置事务 -->

	<tx:advice id="transactionAdvice">
		<tx:attributes>
			<tx:method name="*" rollback-for="java.lang.Exception"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.fanxs..*ServiceImpl.*(..))"/>
	</aop:config>

	<!-- 自动扫描配置 --> <!-- 在base-package包中扫描@Service、@Component注解的类， 并把这些类自动注册为bean 备注：@Controller放到spring
		mvc扫描 -->
	<context:component-scan base-package="com.fanxs.*.service" />
	<context:component-scan base-package="com.fanxs.*.entity" />
	<context:component-scan base-package="com.fanxs.*.dao" />


</beans>
