<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 启用注解映射+json转换器 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean
                    class="org.springframework.http.converter.StringHttpMessageConverter" />
            <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 自动扫描 --> <!-- spring mvc自动扫描base-pack下或子包下的@Controller注解的类，自动注册为bean 注：@Service、@Component一般放到spring配置文件中去扫描 -->
<!--    SpringMVC容器会把service、dao层的bean重新加载，从而造成新加载的bean覆盖了老的bean，
    但事务的AOP代理没有配置在spring-mvc.xml配置文件中，造成事务失效。
    解决办法是：在spring-mvc.xml配置文件中的context:component-scan标签中使用use-default-filters=“false”禁用掉默认的行为。-->
    <context:component-scan base-package="com.fanxs.*" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 视图解析路径配置 依赖jstl包 -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="contentType" value="text/html" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- <property name="prefix" value="/" /> -->
        <property name="suffix" value=".jsp" />
    </bean>

    <bean id="exceptionResolver"   class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">error/error</prop>
                <prop key="java.lang.Throwable">error/error</prop>
            </props>
        </property>
    </bean>


</beans>
